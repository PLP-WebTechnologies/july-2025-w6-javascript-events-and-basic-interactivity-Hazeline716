// Part 1 & 2: Interactive Features & Event Handling// This section handles the light/dark mode toggle and a simple counter game.// It listens for 'click' events on the respective buttons and performs DOM manipulation.document.addEventListener('DOMContentLoaded', () => {// Feature 1: Light/Dark Mode Toggle// This feature toggles a 'dark' class on the body to switch themes.// It also saves the user's preference to local storage.const themeToggleBtn = document.getElementById('theme-toggle');const isDarkMode = localStorage.getItem('darkMode') === 'true';if (isDarkMode) {document.body.classList.add('dark');}themeToggleBtn.addEventListener('click', () => {document.body.classList.toggle('dark');localStorage.setItem('darkMode', document.body.classList.contains('dark'));});// Feature 2: Simple Counter// This feature increments a number when a button is clicked.const counterBtn = document.getElementById('counter-btn');const counterValue = document.getElementById('counter-value');let count = 0;counterBtn.addEventListener('click', () => {count++;counterValue.textContent = count;});});// Part 3: Custom Form Validation// This section validates the contact form using JavaScript and regular expressions.// It prevents submission of invalid data and provides user feedback.const form = document.getElementById('contact-form');const nameInput = document.getElementById('name');const emailInput = document.getElementById('email');const passwordInput = document.getElementById('password');const nameFeedback = document.getElementById('name-feedback');const emailFeedback = document.getElementById('email-feedback');const passwordFeedback = document.getElementById('password-feedback');const successMessage = document.getElementById('form-success-message');form.addEventListener('submit', (e) => {e.preventDefault();let isFormValid = true;// Validate Full Nameif (nameInput.value.trim() === '') {nameFeedback.textContent = 'Full name is required.';nameFeedback.classList.remove('hidden');isFormValid = false;} else {nameFeedback.classList.add('hidden');}// Validate Emailconst emailRegex = /^[^\s@]+@[^\s@]+.[^\s@]+/;if(!emailRegex.test(emailInput.value))emailFeedback.textContent=′Pleaseenteravalidemailaddress.′;emailFeedback.classList.remove(′hidden′);isFormValid=false;elseemailFeedback.classList.add(′hidden′);//ValidatePasswordconstpasswordRegex=/(?=.∗[a−z])(?=.∗[A−Z])(?=.∗\d)[a−zA−Z\d]8,/;if (!passwordRegex.test(passwordInput.value)) {passwordFeedback.textContent = 'Password must be at least 8 characters, and contain at least one uppercase letter, one lowercase letter, and one number.';passwordFeedback.classList.remove('hidden');isFormValid = false;} else {passwordFeedback.classList.add('hidden');}// Display success message if form is validif (isFormValid) {form.reset();successMessage.classList.remove('hidden');setTimeout(() => {successMessage.classList.add('hidden');}, 3000);}});
